# Generated by Django 4.2.9 on 2025-01-10 06:44

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ance',
            fields=[
                ('idnace', models.BigAutoField(db_column='IDNACE', primary_key=True, serialize=False)),
                ('aquite', models.IntegerField(db_column='AQUITTE')),
            ],
            options={
                'db_table': 'ance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bulletin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trimester', models.IntegerField(choices=[(1, '1er Trimestre'), (2, '2ème Trimestre'), (3, '3ème Trimestre')])),
                ('total_coefficients', models.FloatField(default=0)),
                ('total_definitive_periode', models.FloatField(default=0)),
                ('moyenne_periode', models.FloatField(default=0)),
                ('moyenne_classe', models.FloatField(default=0)),
                ('appreciation', models.CharField(max_length=20)),
                ('rang', models.IntegerField(blank=True, null=True)),
                ('matieres_notes', models.JSONField(default=list)),
            ],
            options={
                'db_table': 'bulletin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('idclasse', models.AutoField(db_column='IDCLASSE', primary_key=True, serialize=False)),
                ('libelleclasse', models.CharField(blank=True, db_column='LIBELLECLASSE', max_length=15, null=True)),
                ('ecolage', models.DecimalField(blank=True, db_column='ECOLAGE', decimal_places=0, max_digits=10, null=True)),
                ('nbremax', models.IntegerField(blank=True, db_column='NBREMAX', null=True)),
                ('libellecarnet', models.CharField(blank=True, db_column='LIBELLECARNET', max_length=15, null=True)),
            ],
            options={
                'db_table': 'classe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coefficient',
            fields=[
                ('idcoeff', models.AutoField(primary_key=True, serialize=False)),
                ('coeff', models.IntegerField()),
            ],
            options={
                'db_table': 'coefficient',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('nummatricule', models.AutoField(db_column='NUMMATRICULE', primary_key=True, serialize=False)),
                ('nom', models.CharField(db_column='NOM', max_length=100)),
                ('prenom', models.CharField(blank=True, db_column='PRENOM', max_length=100, null=True)),
                ('datenaissance', models.DateField(blank=True, db_column='DATENAISSANCE', null=True)),
                ('lieunaissance', models.CharField(blank=True, db_column='LIEUNAISSANCE', max_length=100, null=True)),
                ('adresseeleve', models.CharField(blank=True, db_column='ADRESSEELEVE', max_length=100, null=True)),
                ('ecoleorigine', models.CharField(blank=True, db_column='ECOLEORIGINE', max_length=50, null=True)),
                ('niveauetude', models.CharField(blank=True, db_column='NIVEAUETUDE', max_length=20, null=True)),
                ('nompere', models.CharField(blank=True, db_column='NOMPERE', max_length=100, null=True)),
                ('professionpere', models.CharField(blank=True, db_column='PROFESSIONPERE', max_length=50, null=True)),
                ('nommere', models.CharField(blank=True, db_column='NOMMERE', max_length=100, null=True)),
                ('professionmere', models.CharField(blank=True, db_column='PROFESSIONMERE', max_length=50, null=True)),
                ('nomtuteur', models.CharField(blank=True, db_column='NOMTUTEUR', max_length=100, null=True)),
                ('professiontuteur', models.CharField(blank=True, db_column='PROFESSIONTUTEUR', max_length=50, null=True)),
                ('contact', models.CharField(blank=True, db_column='CONTACT', max_length=50, null=True)),
                ('motpasse', models.CharField(db_column='MOTPASSE', max_length=20)),
                ('observation', models.CharField(blank=True, db_column='OBSERVATION', max_length=100, null=True)),
                ('sexe', models.CharField(blank=True, db_column='SEXE', max_length=1, null=True)),
                ('dateinscription', models.DateField(blank=True, db_column='DATEINSCRIPTION', null=True)),
                ('volet1', models.IntegerField(blank=True, db_column='VOLET1', null=True)),
                ('volet2', models.IntegerField(blank=True, db_column='VOLET2', null=True)),
                ('volet3', models.IntegerField(blank=True, db_column='VOLET3', null=True)),
                ('estquite', models.IntegerField(blank=True, db_column='ESTQUITE', null=True)),
                ('reduction', models.IntegerField(blank=True, db_column='REDUCTION', null=True)),
                ('imgeleve', models.CharField(blank=True, db_column='IMGELEVE', max_length=255, null=True)),
            ],
            options={
                'db_table': 'eleve',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('codemat', models.AutoField(primary_key=True, serialize=False)),
                ('nommatiere', models.CharField(max_length=255)),
                ('id_coeff', models.IntegerField()),
            ],
            options={
                'db_table': 'matieres',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MatierePropre',
            fields=[
                ('idmatiere', models.AutoField(primary_key=True, serialize=False)),
                ('nommatiere', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'matiere_propre',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('idniveau', models.AutoField(db_column='IDNIVEAU', primary_key=True, serialize=False)),
                ('nomniveau', models.CharField(blank=True, db_column='NOMNIVEAU', max_length=20, null=True)),
                ('tauxniveau', models.FloatField(blank=True, db_column='TAUXNIVEAU', null=True)),
            ],
            options={
                'db_table': 'niveau',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('idnote', models.AutoField(db_column='idnote', primary_key=True, serialize=False)),
                ('note', models.FloatField(verbose_name='Note')),
                ('periode', models.IntegerField(verbose_name='Période')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'db_table': 'notes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Numero',
            fields=[
                ('numero', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'numero',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelationGlobale',
            fields=[
                ('idrelation', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'relation_globale',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annee',
            fields=[
                ('idannee', models.AutoField(db_column='IDANNEE', primary_key=True, serialize=False)),
                ('anneescolaire', models.CharField(blank=True, db_column='ANNEESCOLAIRE', max_length=128, null=True)),
                ('datedebut', models.DateField(blank=True, db_column='DATEDEBUT', null=True)),
                ('datefin', models.DateField(blank=True, db_column='DATEFIN', null=True)),
                ('encours', models.IntegerField(db_column='ENCOURS', default=0)),
            ],
            options={
                'db_table': 'annee',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('idutilisateur', models.AutoField(db_column='IDUTILISATEUR', primary_key=True, serialize=False)),
                ('nomutilisateur', models.CharField(blank=True, db_column='NOMUTILISATEUR', max_length=50, null=True)),
                ('pseudoutilisateur', models.CharField(db_column='PSEUDOUTILISATEUR', max_length=50, unique=True)),
                ('typeutilisateur', models.CharField(blank=True, db_column='TYPEUTILISATEUR', max_length=50, null=True)),
                ('valide', models.BooleanField(db_column='VALIDE', default=True)),
                ('statut', models.BooleanField(db_column='STATUT', default=True)),
                ('imguser', models.ImageField(blank=True, null=True, upload_to='user_images/')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'utilisateura',
                'managed': True,
            },
        ),
    ]
